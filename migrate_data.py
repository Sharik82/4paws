from sqlalchemy import create_engine, MetaData, Table
from sqlalchemy.orm import sessionmaker
import os

# üîµ –°—Ç–∞—Ä–µ SQLite –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è (—à–ª—è—Ö –¥–æ products.db)
sqlite_engine = create_engine('sqlite:///products.db')

# üü£ –ù–æ–≤–µ PostgreSQL –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è (–æ–Ω–æ–≤–∏ URI —è–∫—â–æ —Ç—Ä–µ–±–∞)
postgres_engine = create_engine('postgresql://denis@localhost/4paws_db')

# –°–µ—Å—ñ—ó
SQLiteSession = sessionmaker(bind=sqlite_engine)
PostgresSession = sessionmaker(bind=postgres_engine)

sqlite_session = SQLiteSession()
postgres_session = PostgresSession()

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ product –∑ SQLite
sqlite_meta = MetaData(bind=sqlite_engine)
sqlite_meta.reflect()
product_table = Table('product', sqlite_meta, autoload_with=sqlite_engine)

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ —É PostgreSQL
postgres_meta = MetaData(bind=postgres_engine)
postgres_meta.reflect()

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ —Ç–∞–±–ª–∏—Ü—è —ñ—Å–Ω—É—î —É PostgreSQL
if 'product' not in postgres_meta.tables:
    print("–¢–∞–±–ª–∏—Ü—è 'product' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞ —É PostgreSQL. –°–ø–æ—á–∞—Ç–∫—É –≤–∏–∫–æ–Ω–∞–π –º—ñ–≥—Ä–∞—Ü—ñ—ó.")
    exit()

# –û—Ç—Ä–∏–º—É—î–º–æ –≤—Å—ñ –∑–∞–ø–∏—Å–∏ –∑ SQLite
products = sqlite_session.execute(product_table.select()).fetchall()

# –í—Å—Ç–∞–≤–ª—è—î–º–æ —É PostgreSQL
product_pg = postgres_meta.tables['product']
for row in products:
    insert_stmt = product_pg.insert().values(**dict(row))
    postgres_session.execute(insert_stmt)

postgres_session.commit()
print(f"‚úÖ –ü–µ—Ä–µ–Ω–µ—Å–µ–Ω–æ {len(products)} —Ç–æ–≤–∞—Ä—ñ–≤ —É PostgreSQL")

# –ó–∞–∫—Ä–∏–≤–∞—î–º–æ —Å–µ—Å—ñ—ó
sqlite_session.close()
postgres_session.close()
